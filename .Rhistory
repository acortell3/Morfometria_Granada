plot(out_PCA, 1, pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE, old.par = TRUE)
plot(out_PCA, 1, pos.shp = "xy", palette = col_qual, labelsgroups = FALSE, labelspoints = TRUE)
par(mfrow = c(1,2))
plot(out_PCA, 1, pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE)
plot(out_PCA, 1, pos.shp = "xy", palette = col_qual, labelsgroups = FALSE)
plot(out_PCA, 1, pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE)
par(mfrow = c(1,1))
plot(out_PCA, 1, pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE)
plot(out_PCA, 1, pos.shp = "xy", palette = col_qual, labelsgroups = FALSE)
plot(out_PCA, 1, pos.shp = "xy", stars = TRUE, palette = col_qual, labelsgroups = FALSE)
plot(out_PCA, 1, pos.shp = "xy", stars = TRUE, palette = col_qual,
labelsgroups = FALSE, labelspoints = TRUE)
plot(out_PCA, 1, pos.shp = "circle", stars = TRUE, palette = col_qual,
labelsgroups = FALSE, labelspoints = TRUE)
plot("./Datos/1130.jpg")
install.packages("imager")
#for (i in 1:length(index)){
#  file.copy(from = paste0("/media/alfredo/1TB/Storage/INVESTIGACIO/TESIS/data/Z_TOT_ORDENAT/",index[i],"/GeoMorph/",index[i],".jpg"),
#                          to = paste0("./Shapes/",index[i],".jpg"), overwrite = TRUE)
#}
setwd("..")
#for (i in 1:length(index)){
#  file.copy(from = paste0("/media/alfredo/1TB/Storage/INVESTIGACIO/TESIS/data/Z_TOT_ORDENAT/",index[i],"/GeoMorph/",index[i],".jpg"),
#                          to = paste0("./Shapes/",index[i],".jpg"), overwrite = TRUE)
#}
setwd("..")
setwd("..")
getwd()
setwd("Morfometria_Granada")
getwd()
## Cambiamos al directorio en el que se encuentran los objetos
setwd("./Shapes")
getwd()
setwd("./Shapes")
getwd()
setwd("..")
getwd()
install.packages("randomForest")
library(randomForest)
# Load the Iris dataset
data(iris)
# Split the data into training and testing sets
set.seed(123)  # for reproducibility
train_indices <- sample(1:nrow(iris), 0.7 * nrow(iris))
train_data <- iris[train_indices, ]
test_data <- iris[-train_indices, ]
# Create a Random Forest model
rf_model <- randomForest(Species ~ ., data = train_data, ntree = 100)
# Make predictions on the test set
predictions <- predict(rf_model, test_data)
# Evaluate the model
confusion_matrix <- table(predictions, test_data$Species)
print("Confusion Matrix:")
print(confusion_matrix)
# Calculate accuracy
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
print(paste("Accuracy:", round(accuracy, 4)))
iris
## Explore mean shapes
# Estimate mean shape
msh <- mshape(lm_geo_gpa$coords)
library(geomorph)
## Explore mean shapes
# Estimate mean shape
msh <- mshape(lm_geo_gpa$coords)
## plot shape differences between a reference and a target specimen
plotRefToTarget(msh, PCA$shapes$shapes.comp1$max)
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,1])
plotRefToTarget(PCA$shapes$shapes.comp1$min,
PCA$shapes$shapes.comp1$max, method = "vector",
mag = 0.5)
## plot shape differences between a reference and a target specimen
plotRefToTarget(msh, PCA$shapes$shapes.comp1$max)
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,1])
?mshape
## plot shape differences between a reference and a target specimen
plotRefToTarget(msh, PCA$shapes$shapes.comp1$max)
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,1])
plotRefToTarget(PCA$shapes$shapes.comp1$min,
PCA$shapes$shapes.comp1$max, method = "vector",
mag = 0.5)
par(mfrow = c(1,2))
plotRefToTarget(msh, PCA$shapes$shapes.comp1$max)
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,1])
par(mfrow = c(2,2))
plotRefToTarget(msh, PCA$shapes$shapes.comp1$max)
plotRefToTarget(msh, PCA$shapes$shapes.comp1$min)
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,1])
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,20])
?plotRefToTarget
plotRefToTarget(msh, PCA$shapes$shapes.comp1$max, title = "g")
title("g")
par(mfrow = c(2,2))
plotRefToTarget(msh, PCA$shapes$shapes.comp1$max)
title("Mean to max PC1")
plotRefToTarget(msh, PCA$shapes$shapes.comp1$min)
title("Mean to min PC1")
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,1])
title("Geo 5 to 1")
plotRefToTarget(lm_geo_gpa$coords[,,5],lm_geo_gpa$coords[,,20])
title("Geo 5 to 20")
par(mfrow = c(1,1))
plotRefToTarget(PCA$shapes$shapes.comp1$min,
PCA$shapes$shapes.comp1$max, method = "vector",
mag = 0.5)
getwd()
plotRefToTarget(PCA$shapes$shapes.comp1$min,
PCA$shapes$shapes.comp1$max, method = "vector",
mag = 0.5)
plotRefToTarget(PCA$shapes$shapes.comp1$min,
PCA$shapes$shapes.comp1$max, method = "vector",
mag = 0.5, axes = TRUE)
title("Tracciones")
## PCA plot
plot(out_PCA, 1, pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE)
out_PCA <- PCA(geo_out_F)
library(Momocs)
## PCA outlines
out_PCA <- PCA(geo_out_F)
## PCA plot
plot(out_PCA, 1, pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE)
## PCA with actual shapes
plot(out_PCA, 1, pos.shp = "xy", palette = col_qual, labelsgroups = FALSE)
## PCA with labels and circular shapes
plot(out_PCA, 1, pos.shp = "circle", stars = TRUE, palette = col_qual,
labelsgroups = FALSE, labelspoints = TRUE)
blades <- data.frame("Length" = c(rnorm(50,1,0.1),rnorm(47,1.2,0.1)),
"Affiliation" = c(rep("HG",50), rep("F",47)))
write.csv(blades,"./Datos/blades.csv")
laminas <- read.csv("./Datos/blades.csv")
laminas
hist(laminas$Length)
hist(laminas$Length, add = TRUE)
hist(laminas$Length)
laminas <- read.csv("./Datos/blades.csv")[,-1]
laminas
hist(laminas$Length[laminas$Affiliation == "HG"])
hist(laminas$Length[laminas$Affiliation == "F"] add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"])
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"])
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlab = c(0.7,1.5))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlab = c(0.7,2))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
blades <- data.frame("Length" = c(rnorm(50,1,0.1),rnorm(47,1.1,0.1)),
"Affiliation" = c(rep("HG",50), rep("F",47)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlab = c(0.7,2))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
blades <- data.frame("Length" = c(rnorm(126,1,0.1),rnorm(99,1.1,0.1)),
"Affiliation" = c(rep("HG",126), rep("F",99)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlab = c(0.7,2))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlab = c(0.7,3))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlab = c(0.7,3),
ylab = c(0,50))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.7,3),
ylim = c(0,50))
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.7,1.5),
ylim = c(0,50))
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.7,1.5),
ylim = c(0,30))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.7,1.5),
ylim = c(0,35))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.7,1.5),
ylim = c(0,40))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.7,1.5),
ylim = c(0,50))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.5,2),
ylim = c(0,50))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50))
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE)
?breaks
?hist
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, 10)
blades <- data.frame("Length" = c(rnorm(126,1,0.1),rnorm(99,1.1,0.05)),
"Affiliation" = c(rep("HG",126), rep("F",99)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, 10)
blades <- data.frame("Length" = c(rnorm(126,1,0.1),rnorm(99,1.1,0.05)),
"Affiliation" = c(rep("HG",126), rep("F",99)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10)
blades <- data.frame("Length" = c(rnorm(126,1,0.1),rnorm(99,1.1,0.05)),
"Affiliation" = c(rep("HG",126), rep("F",99)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10)
blades <- data.frame("Length" = c(rnorm(126,1,0.1),rnorm(99,1.1,0.05)),
"Affiliation" = c(rep("HG",126), rep("F",99)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10)
blades <- data.frame("Length" = c(rnorm(126,1,0.1),rnorm(99,1.1,0.05)),
"Affiliation" = c(rep("HG",126), rep("F",99)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10)
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05)),
"Affiliation" = c(rep("HG",126), rep("F",99)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.6,1.6),
ylim = c(0,50), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.8,1.3),
ylim = c(0,40), breaks = 10)
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.8,1.3),
ylim = c(0,40), breaks = 10, col = c1)
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.8,1.3),
ylim = c(0,40), breaks = 10, col = "lightblue")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = "pink")
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.8,1.3),
ylim = c(0,40), breaks = 10, col = "lightblue", ylab = "Longitud",
xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = "pink")
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = "lightblue", ylab = "Longitud",
xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = "pink")
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("lightblue", alpha.f = 0.5),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("pink", alpha.f = 0.5))
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("lightblue", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("pink", alpha.f = 0.6))
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
## Preparamos los datos
HG <- laminas$Length[laminas$Affiliation == "HG"] # caza-recolectores
Fa <- laminas$Length[laminas$Affiliation == "F"] # agricultores
t.test(HG,Fa)
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05), rnorm(104,1.15,0.04)),
"Affiliation" = c(rep("HG",126), rep("F",99), rep("BR", 104)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05), rnorm(104,1.15,0.04)),
"Affiliation" = c(rep("HG",126), rep("F",99), rep("BR", 104)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
set.seed(123)
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05), rnorm(104,1.15,0.04)),
"Affiliation" = c(rep("HG",126), rep("F",99), rep("BR", 104)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
set.seed(1)
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05), rnorm(104,1.15,0.04)),
"Affiliation" = c(rep("HG",126), rep("F",99), rep("BR", 104)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
set.seed(12)
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05), rnorm(104,1.15,0.04)),
"Affiliation" = c(rep("HG",126), rep("F",99), rep("BR", 104)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
set.seed(1234)
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05), rnorm(104,1.15,0.04)),
"Affiliation" = c(rep("HG",126), rep("F",99), rep("BR", 104)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
set.seed(12345)
blades <- data.frame("Length" = c(rnorm(126,1,0.03),rnorm(99,1.1,0.05), rnorm(104,1.15,0.04)),
"Affiliation" = c(rep("HG",126), rep("F",99), rep("BR", 104)))
write.csv(blades,"./Datos/blades.csv")
laminas <- blades
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
hist(laminas$Length[laminas$Affiliation == "BR"], add = TRUE, breaks = 10,
col = adjustcolor("gold2", alpha.f = 0.6))
hist(laminas$Length[laminas$Affiliation == "BR"], add = TRUE, breaks = 10,
col = adjustcolor("gold3", alpha.f = 0.6))
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.3),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
hist(laminas$Length[laminas$Affiliation == "BR"], add = TRUE, breaks = 10,
col = adjustcolor("gold3", alpha.f = 0.6))
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.25),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
legend("topright", legend = c("Meso","Neo"), lty = c(1,1),
col =c("aquamarine4","brown3"))
hist(laminas$Length[laminas$Affiliation == "HG"], xlim = c(0.85,1.3),
ylim = c(0,35), breaks = 10, col = adjustcolor("aquamarine4", alpha.f = 0.6),
ylab = "Longitud", xlab = "Frecuencia", main = "Diferencias entre láminas")
hist(laminas$Length[laminas$Affiliation == "F"], add = TRUE, breaks = 10,
col = adjustcolor("brown3", alpha.f = 0.6))
hist(laminas$Length[laminas$Affiliation == "BR"], add = TRUE, breaks = 10,
col = adjustcolor("gold3", alpha.f = 0.6))
legend("topright", legend = c("Meso","Neo","Bronce"), lty = c(1,1,1),
col =c("aquamarine4","brown3","gold3"))
## Test ANOVA
aov.res <- aov(Length ~ Affiliation, laminas)
summary(aov.res)
?screeplot
scree(geo_out_F)
library(Momocs)
scree(geo_out_F)
scree(geo_out_cntr)
scree(out_PCA)
plot(scree(out_PCA))
scree_plot(out_PCA)
?plot_PCA
plot(out_PCA, 1, axes = c(2,3), pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE)
plot_PCA(out_PCA, 1, axes = c(2,3), pos.shp = "range_axes", palette = col_qual,
ellipses = TRUE, morphospace = FALSE)
plot_PCA(out_PCA, 1, axes = c(2,3), palette = col_qual,
emorphospace = FALSE)
plot_PCA(out_PCA, 1, axes = c(2,3), palette = col_qual,
Morphospace = FALSE)
plot_PCA(out_PCA, 1, axes = c(2,3), palette = col_qual,
morphospace = FALSE)
plot_PCA(out_PCA, 1, axes = c(2,3), palette = col_qual,
morphospace = TRUE)
out_LDA <- LDA(geo_out_F)
geo_out_F
out_LDA <- LDA(geo_out_F, fac = as.factor(geos$Site))
plot(out_LDA)
plot_LDA(out_LDA)
str(LDA)
out_LDA <- LDA(geo_out_F, fac = as.factor(geos$Site))
plot_LDA(out_LDA)
out_LDA$CV.tab
cvn <- out_LDA$CV.tab
for(i in 1:50){
provcvn <- LDA(geo_out_F, fac = as.factor(geos$Site))
provcvn <- provcvn$CV.tab
cvn <- provcvn+cvn
}
plot_CV(cvn)
str(out_LDA)
out_LDA$CV.fac
## Cargamos outlines
setwd("./Shapes")
geo_list <- geos$ID # lista con los identificadores de las figuras
#geo_list <- sort(geo_list) # los ordenamos para cargarlos
geo_list <- paste0(geo_list,".jpg") # juntamos el nombre con la extensión .jpg
## import_jpg importa los archivos y out los convierte al formato para Momocs
geo_out <- Out(import_jpg(geo_list, auto.notcentered = T),
fac = as.factor(geos$Site))
setwd("..")
geos
head(geos[sort(geos$ID),]
)
sort(geos$ID)
head(geos[geos$ID==sort(geos$ID),])
geos[order(geos$ID),]
## Creamos el primer objeto
cvn <- out_LDA$CV.tab
## Repetimos el proceso 50 veces
for(i in 1:50){
provcvn <- LDA(geo_out_F, fac = as.factor(geos$Site))
provcvn <- provcvn$CV.tab
cvn <- provcvn+cvn
}
plot_CV(cvn)
out_PCA <- readRDS("./Datos/out_PCA.rds")
geo_out_F <- readRDS("./Datos/geo_out_F.rds")
geos <- read.csv("./Datos/mom_geos.csv")[,-1]
scree(out_PCA)
scree_plot(out_PCA)
plot_PCA(out_PCA, 1, axes = c(1,2), palette = col_qual,morphospace = TRUE)
plot_PCA(out_PCA, 1, axes = c(1,3), palette = col_qual,morphospace = TRUE)
plot_PCA(out_PCA, 1, axes = c(2,3), palette = col_qual,morphospace = TRUE)
## Creamos el primer objeto
cvn <- out_LDA$CV.tab
## Repetimos el proceso 50 veces
for(i in 1:50){
provcvn <- LDA(geo_out_F, fac = as.factor(geos$Site))
provcvn <- provcvn$CV.tab
cvn <- provcvn+cvn
}
plot_CV(cvn)
cvn
str(cvn)
plot_CV(cvn)
good <- 2500+2300
wrong <- 197
good
wrong/good
wrong/good*100
1-wrong/good
geo_man <- MANOVA(out_PCA)
geo_man <- MANOVA(out_PCA, fac = geos$Site)
geo_man <- MANOVA(out_PCA, fac = as.factor(geos$Site))
summary(geom_man)
summary(geo_man)
geo_man
out_LDA <- LDA(geo_out_F, fac = as.factor(geos$Site))
plot_LDA(out_LDA) ## Como solo tenemos dos niveles, prepara un histograma
out_PCA
out_PCA
str(out_PCA)
out_PCA$x
out_PCA$x$PC1
out_PCA$x[,1]
geos$Site
sample(c("Abrupto","Oblicuo"), 10)
sample(c("Abrupto","Oblicuo"), 10, replace = TRUE)
retoque <- c(rep("Abrupto",47),sample(c("Abrupto","Oblicuo"), 97-47, replace = TRUE))
length(retoque)
retoque
retoque <- as.factor(retoque)
retoque
saveRDS(retoque,"./Datos/retoque.rds")
# Introducimos la información del retoque
retoque <- readRDS("./Datos/retoque.rds")
class(retoque)
# Creamos nuestro data frame con los datos
dat <- data.frame("Yacimiento" = geos$Site,
"PC1" = PC1,
"PC2" = PC2,
"Retoque" = retoque)
# Extraemos PC1 y PC2 del objeto
PC1 <- out_PCA$x[,1]
PC2 <- out_PCA$x[,2]
# Introducimos la información del retoque
retoque <- readRDS("./Datos/retoque.rds")
# Creamos nuestro data frame con los datos
dat <- data.frame("Yacimiento" = geos$Site,
"PC1" = PC1,
"PC2" = PC2,
"Retoque" = retoque)
head(dat)
mod1 <- glm(Yacimiento ~ PC1 + PC2 + retoque, data = dat, family = "binomial")
mod1 <- glm(as.factor(Yacimiento) ~ PC1 + PC2 + retoque, data = dat, family = "binomial")
summary(mod1)
library(Momocs)
library(geomorph)
sessionInfo()
